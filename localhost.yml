- hosts: localhost
  connection: local
  gather_facts: no           
  sudo: no
  vars:
    homebrew_taps:
      - homebrew/binary
      - homebrew/dupes
      - caskroom/cask
      - railwaycat/emacsmacport
      - sanemat/font
    homebrew_packages:
      - { name: readline }
      - { name: openssl }
      - { name: openssl, state: linked, install_options: force }
      - { name: python }
      - { name: ansible }
      - { name: coreutils }
      - { name: git }
      - { name: zsh, install_options: disable-etcdir }
      - { name: wget }
      - { name: curl }
      - { name: cmake }
      - { name: autoconf }
      - { name: automake }
      - { name: pkg-config }
      - { name: ctags }
      - { name: tree }
      # ファイルの中身を表示
      - { name: lv }
      - { name: nkf }
      # JSONを超絶に読みやすくする
      - { name: jq }
      - { name: go }
      # ディレクトリがカレントになったとき指定した環境変数を有効にする
      - { name: direnv }
      # コマンドのインクリメンタルサーチ
      - { name: peco }
      # GitHubをCUIで操作
      - { name: hub }
      # Git用CUIリポジトリブラウザ
      - { name: tig }
      # Fish-Shell かわいいらしい
      - { name: fish }
      - { name: rbenv }
      - { name: ruby-build }
      # テキストファイルのエンコーディングを変換する
      - { name: tofrodos }
      - { name: lha }
      # FTP/SFTPクライアント
      - { name: flow }
      - { name: mysql }
      - { name: postgresql }
      - { name: sqlite }
      - { name: redis }
      - { name: imagemagick }
      - { name: mercurial }
      # マシンイメージの自動生成や管理をするコマンドラインツール
      - { name: packer }
      # xz形式の圧縮・解凍
      - { name: xz }
      # Socketの操作が捗りまくる
      - { name: socat }
      # readlineラッパー (sqlplusなどにコマンド履歴を使える?)
      - { name: rlwrap }
      - { name: w3m }
      # Terminalを多重化?
      - { name: tmux }
      # tmuxでクリップボードを使えるようにする
      - { name: reattach-to-user-namespace }
      - { name: phantomjs }
      - { name: graphviz }
      # ディレクトリの移動が超絶楽
      - { name: autojump }
      # コマンド一発で.gitignoreを追加
      - { name: gibo }
      - { name: source-highlight }
      - { name: docker }
      - { name: docker-machine }
      - { name: typesafe-activator }
      - { name: nvm }
    homebrew_cask_packages:
      - { name: iterm2 }
      - { name: firefox }
      - { name: google-chrome }
      - { name: adobe-reader }
      - { name: java }
      - { name: skype }
      - { name: slack }
      - { name: dropbox }
      - { name: sourcetree }
      - { name: gitx }
      - { name: chefdk }
      # キーバインディングのカスタマイズ
      - { name: karabiner }
      - { name: seil }
      # 様々なAPIリファレンスを高速に検索できる
      - { name: dash }
      # Evernoteに図形、スタンプを描き込める?
      - { name: skitch }
      # Cocoa frameworkのためのイメージエディタ
      - { name: seashore }
      - { name: atom }
      # プログラミングのメモやスニペットの記録に最適なMacアプリ
      - { name: kobito }
      - { name: intellij-idea }
      - { name: vagrant }
      - { name: virtualbox }
      - { name: android-studio }
      - { name: silverlight }
      - { name: flash-player }

  tasks:
    - name: homebrew の tap リポジトリを追加
      homebrew_tap: tap={{ item }} state=present
      with_items: homebrew_taps

    - name: homebrew をアップデート
      homebrew: update_homebrew=yes

    # brew
    - name: brew パッケージをインストール
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: homebrew_packages
      register: brew_result
    - name: brew パッケージの情報保存先ディレクトリを作成
      file: path=brew_info state=directory
    - name: brew パッケージの情報を保存
      shell: brew info {{ item }} > brew_info/{{ item }}
      with_items: brew_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list

    # cask
    #- name: homebrew-cask のインストール
    #  homebrew: name=brew-cask state=latest
    - name: cask パッケージをインストール
      homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }}
      with_items: homebrew_cask_packages
      register: cask_result
    - name: cask パッケージの情報保存先ディレクトリを作成
      file: path=cask_info state=directory
    - name: cask パッケージの情報を保存
      shell: brew cask info {{ item }} > cask_info/{{ item }}
      with_items: cask_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list

    # oh-my-zsh
    - name: oh-my-zsh のインストール
      shell: curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
      args:
        creates: ~/.oh-my-zsh/

    # Ricty
    - name: xquartz のインストール (for Ricty)
      homebrew_cask: name=xquartz
    - name: fontforge のインストール (for Ricty)
      homebrew: name=fontforge
    - name: Ricty のインストール
      homebrew: name=ricty
    - name: 生成されたフォントファイルをコピー
      shell: cp -f $(brew --cellar ricty)/*/share/fonts/Ricty*.ttf ~/Library/Fonts/
      args:
        creates: ~/Library/Fonts/Ricty-Bold.ttf
      notify: run fc-cache

    # nvm
    - name: .zshrcに設定追加 (for nvm)
      lineinfile: >
        dest=~/.zshrc
        line='source $(brew --prefix nvm)/nvm.sh'
    - name: Node.jsインストール
      shell: source $(brew --prefix nvm)/nvm.sh && nvm install v0.10.26
    
    # docker-compose
    - name: link docker
      shell: brew link --overwrite docker
    - name: install docker-compose
      shell: brew install docker-compose

  handlers:
    - name: run fc-cache
      shell: fc-cache -vf
